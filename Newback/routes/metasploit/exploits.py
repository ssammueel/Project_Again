import json
import requests
from flask import Blueprint, request, jsonify

# Define the blueprint
exploits_bp = Blueprint("exploits", __name__)

# Metasploit RPC API Configuration (Ensure Metasploit RPC is running)
MSF_RPC_URL = "http://127.0.0.1:55553/api/"
MSF_RPC_USER = "msf"
MSF_RPC_PASS = "yourpassword"

def authenticate():
    """Authenticate with Metasploit RPC and get the token."""
    try:
        response = requests.post(
            f"{MSF_RPC_URL}auth/login",
            json={"username": MSF_RPC_USER, "password": MSF_RPC_PASS},
            verify=False  # Ignore SSL errors
        )
        response.raise_for_status()  # Raise an error if request fails
        data = response.json()
        return data.get("token")  # Return token if found
    except requests.RequestException as e:
        print(f"Authentication failed: {e}")
        return None

@exploits_bp.route("/metasploit/exploit", methods=["POST"])
def run_exploit():
    data = request.json
    module = data.get("module")
    target = data.get("target")
    options = data.get("options", {})

    if not module:
        return jsonify({"error": "Module is required"}), 400
    if not target:
        return jsonify({"error": "Target IP is required"}), 400

    token = authenticate()
    if not token:
        return jsonify({"error": "Authentication failed"}), 500

    # Prepare exploit data
    exploit_data = {
        "token": token,
        "module": module,
        "options": {"RHOSTS": target, **options}
    }

    try:
        # Send the exploit request
        response = requests.post(f"{MSF_RPC_URL}module.execute", json=exploit_data, verify=False)
        response.raise_for_status()  # Ensure no HTTP error occurred

        # Return the response from Metasploit
        return jsonify(response.json())
    except requests.RequestException as e:
        return jsonify({"error": f"Failed to execute exploit: {str(e)}"}), 500
